version: '3.8'

x-environment: &default-environment
  PREFECT_API_URL: "http://127.0.0.1:4200/api"
  PREFECT_UI_URL: "http://127.0.0.1:4200/api"
  PREFECT_SERVER_API_HOST: "0.0.0.0"
  MLFLOW_URI: "http://mlflow:5000"
  PHYSIONET_USERNAME: None
  PHYSIONET_PASSWORD: None
  COOKIE_API_REQUEST: "_ga=GA1.2.263637740.1720827977; _ga_YKC8ZQQ4FF=GS1.1.1722094447.5.1.1722094879.0.0.0; csrftoken=dupoQ7jFXMN2dE6MrVvg2F08528jeroc; _gid=GA1.2.1133650335.1722094448; sessionid=nx4uuw1er9ox7aqf6gmld8cc2u2fkgzx"
  DB_HOST: db
  DB_PORT: 5432
  DB_USER: postgres
  DB_PASSWORD: example
  DB_NAME: test
  METRIC_TABLE: dummy_metrics

networks:
  backend-server:
  back-tier:
  front-tier:

volumes: 
  grafana_data: {}

services:
  prefect:
    image: prefecthq/prefect:2-python3.11
    restart: always
    ports:
      - "4200:4200"
    environment:
      <<: *default-environment
    command: prefect server start
    networks:
      - backend-server

  prefect-worker:
    build:
      context: .
      dockerfile: workflow.dockerfile
    environment:
      <<: *default-environment
      PREFECT_API_URL: "http://prefect:4200/api"  # Override for worker to use service name
    networks:
      - backend-server

  mlflow:
    build:
      context: .
      dockerfile: mlflow.dockerfile
    environment:
      <<: *default-environment
    ports:
      - "5000:5000"
    volumes:
      - "${PWD}/mlflow_data:/home/mlflow_data/"
    networks:
      - backend-server

  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: example
    ports:
      - "5432:5432"
    networks:
      - back-tier
      - backend-server

  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    networks:
      - back-tier
      - front-tier

  grafana:
    image: grafana/grafana-enterprise
    user: "472"
    ports:
      - "3000:3000"
    volumes:
      - ./config/grafana_datasources.yaml:/etc/grafana/provisioning/datasources/datasource.yaml:ro
      - ./config/grafana_dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml:ro
      - ./dashboards:/opt/grafana/dashboards
    networks:
      - back-tier
      - front-tier
    restart: always
